export const CalculatorIcon = () => (
  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M4.66666 1.33334H11.3333C11.6869 1.33334 12.0261 1.47382 12.2761 1.72387C12.5262 1.97392 12.6667 2.31305 12.6667 2.66668V13.3333C12.6667 13.687 12.5262 14.0261 12.2761 14.2762C12.0261 14.5262 11.6869 14.6667 11.3333 14.6667H4.66666C4.31304 14.6667 3.9739 14.5262 3.72385 14.2762C3.4738 14.0261 3.33333 13.687 3.33333 13.3333V2.66668C3.33333 2.31305 3.4738 1.97392 3.72385 1.72387C3.9739 1.47382 4.31304 1.33334 4.66666 1.33334ZM4.66666 2.66668V5.33334H11.3333V2.66668H4.66666ZM4.66666 6.66668V8.00001H5.99999V6.66668H4.66666ZM7.33333 6.66668V8.00001H8.66666V6.66668H7.33333ZM9.99999 6.66668V8.00001H11.3333V6.66668H9.99999ZM4.66666 9.33334V10.6667H5.99999V9.33334H4.66666ZM7.33333 9.33334V10.6667H8.66666V9.33334H7.33333ZM9.99999 9.33334V10.6667H11.3333V9.33334H9.99999ZM4.66666 12V13.3333H5.99999V12H4.66666ZM7.33333 12V13.3333H8.66666V12H7.33333ZM9.99999 12V13.3333H11.3333V12H9.99999Z" fill="currentColor"/>
  </svg>
);

// Update the CalendarIcon to accept opacity prop
export const CalendarIcon = ({ opacity = 1 }: { opacity?: number }) => (
  <svg 
    width="16" 
    height="16" 
    viewBox="0 0 16 16" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    style={{ opacity }}
  >
    <path d="M13 2H11V1H10V2H6V1H5V2H3C2.45 2 2 2.45 2 3V13C2 13.55 2.45 14 3 14H13C13.55 14 14 13.55 14 13V3C14 2.45 13.55 2 13 2ZM13 13H3V6H13V13ZM13 5H3V3H5V4H6V3H10V4H11V3H13V5Z" fill="currentColor"/>
  </svg>
);

// Add other icons here as needed
export const SettingsIcon = () => (
  <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M14.5466 6.4156L13.2866 5.9956L13.88 4.80893C13.9401 4.68472 13.9602 4.54491 13.9375 4.40878C13.9148 4.27265 13.8505 4.14692 13.7533 4.04893L12.3333 2.62893C12.2348 2.53032 12.1078 2.46507 11.9703 2.44235C11.8328 2.41963 11.6916 2.44058 11.5666 2.50227L10.38 3.0956L9.95996 1.8356C9.9156 1.70426 9.83141 1.59002 9.71909 1.50876C9.60677 1.42751 9.47192 1.38329 9.33329 1.38227H7.33329C7.19353 1.3819 7.05719 1.42548 6.94354 1.50683C6.82989 1.58818 6.74469 1.70318 6.69996 1.8356L6.27996 3.0956L5.09329 2.50227C4.96909 2.44212 4.82927 2.422 4.69314 2.44469C4.55701 2.46738 4.43128 2.53175 4.33329 2.62893L2.91329 4.04893C2.81469 4.14744 2.74943 4.27438 2.72671 4.4119C2.70399 4.54942 2.72495 4.69061 2.78663 4.8156L3.37996 6.00227L2.11996 6.42227C1.98862 6.46662 1.87438 6.55082 1.79313 6.66314C1.71188 6.77545 1.66766 6.91031 1.66663 7.04893V9.04893C1.66627 9.18869 1.70984 9.32504 1.79119 9.43868C1.87254 9.55233 1.98755 9.63754 2.11996 9.68226L3.37996 10.1023L2.78663 11.2889C2.72648 11.4131 2.70636 11.553 2.72905 11.6891C2.75174 11.8252 2.81612 11.9509 2.91329 12.0489L4.33329 13.4689C4.4318 13.5675 4.55874 13.6328 4.69626 13.6555C4.83379 13.6782 4.97497 13.6573 5.09996 13.5956L6.28663 13.0023L6.70663 14.2623C6.75135 14.3947 6.83656 14.5097 6.95021 14.591C7.06386 14.6724 7.2002 14.716 7.33996 14.7156H9.33996C9.47972 14.716 9.61606 14.6724 9.72971 14.591C9.84336 14.5097 9.92857 14.3947 9.97329 14.2623L10.3933 13.0023L11.58 13.5956C11.7034 13.6542 11.8418 13.6735 11.9766 13.6509C12.1113 13.6282 12.2358 13.5647 12.3333 13.4689L13.7533 12.0489C13.8519 11.9504 13.9172 11.8235 13.9399 11.686C13.9626 11.5484 13.9416 11.4073 13.88 11.2823L13.2866 10.0956L14.5466 9.6756C14.678 9.63124 14.7922 9.54705 14.8735 9.43473C14.9547 9.32241 14.9989 9.18755 15 9.04893V7.04893C15.0003 6.90917 14.9567 6.77283 14.8754 6.65918C14.7941 6.54553 14.679 6.46032 14.5466 6.4156ZM13.6666 8.56893L12.8666 8.8356C12.6827 8.89527 12.5139 8.99425 12.372 9.12567C12.2301 9.25708 12.1185 9.41779 12.0449 9.59665C11.9714 9.77551 11.9376 9.96823 11.9459 10.1614C11.9543 10.3547 12.0046 10.5438 12.0933 10.7156L12.4733 11.4756L11.74 12.2089L11 11.8089C10.829 11.7238 10.6417 11.6763 10.4508 11.6698C10.2599 11.6633 10.0699 11.6979 9.89351 11.7712C9.71714 11.8445 9.55858 11.9549 9.42857 12.0948C9.29857 12.2348 9.20014 12.401 9.13996 12.5823L8.87329 13.3823H7.81329L7.54663 12.5823C7.48696 12.3983 7.38798 12.2295 7.25656 12.0876C7.12514 11.9457 6.96443 11.8341 6.78557 11.7606C6.60672 11.687 6.414 11.6532 6.22078 11.6616C6.02756 11.6699 5.83847 11.7202 5.66663 11.8089L4.90663 12.1889L4.17329 11.4556L4.57329 10.7156C4.66202 10.5438 4.71231 10.3547 4.72066 10.1614C4.72901 9.96823 4.69523 9.77551 4.62165 9.59665C4.54808 9.41779 4.43648 9.25708 4.29459 9.12567C4.1527 8.99425 3.98392 8.89527 3.79996 8.8356L2.99996 8.56893V7.52893L3.79996 7.26226C3.98392 7.20259 4.1527 7.10361 4.29459 6.9722C4.43648 6.84078 4.54808 6.68007 4.62165 6.50121C4.69523 6.32235 4.72901 6.12963 4.72066 5.93641C4.71231 5.7432 4.66202 5.55411 4.57329 5.38227L4.19329 4.64227L4.92663 3.90893L5.66663 4.28893C5.83847 4.37766 6.02756 4.42795 6.22078 4.4363C6.414 4.44465 6.60672 4.41086 6.78557 4.33729C6.96443 4.26372 7.12514 4.15212 7.25656 4.01023C7.38798 3.86834 7.48696 3.69956 7.54663 3.5156L7.81329 2.7156H8.85329L9.11996 3.5156C9.17963 3.69956 9.27861 3.86834 9.41003 4.01023C9.54145 4.15212 9.70216 4.26372 9.88101 4.33729C10.0599 4.41086 10.2526 4.44465 10.4458 4.4363C10.639 4.42795 10.8281 4.37766 11 4.28893L11.76 3.90893L12.4933 4.64227L12.0933 5.38227C12.0081 5.55323 11.9607 5.7405 11.9542 5.93139C11.9476 6.12229 11.9822 6.31235 12.0556 6.48872C12.1289 6.66509 12.2393 6.82364 12.3792 6.95365C12.5191 7.08366 12.6853 7.18209 12.8666 7.24226L13.6666 7.50893V8.56893ZM8.33329 5.38227C7.80588 5.38227 7.29031 5.53866 6.85177 5.83168C6.41324 6.1247 6.07145 6.54117 5.86962 7.02844C5.66778 7.51571 5.61497 8.05189 5.71787 8.56917C5.82076 9.08645 6.07474 9.56161 6.44768 9.93455C6.82062 10.3075 7.29577 10.5615 7.81305 10.6644C8.33034 10.7673 8.86651 10.7144 9.35378 10.5126C9.84105 10.3108 10.2575 9.96898 10.5505 9.53045C10.8436 9.09192 11 8.57635 11 8.04893C11 7.34169 10.719 6.66341 10.2189 6.16331C9.71881 5.66322 9.04054 5.38227 8.33329 5.38227ZM8.33329 9.38226C8.06959 9.38226 7.8118 9.30407 7.59253 9.15756C7.37327 9.01105 7.20237 8.80281 7.10145 8.55918C7.00054 8.31554 6.97413 8.04745 7.02558 7.78881C7.07703 7.53017 7.20402 7.29259 7.39049 7.10612C7.57696 6.91965 7.81453 6.79266 8.07317 6.74122C8.33182 6.68977 8.5999 6.71618 8.84354 6.81709C9.08717 6.91801 9.29541 7.08891 9.44192 7.30817C9.58843 7.52744 9.66663 7.78522 9.66663 8.04893C9.66663 8.40255 9.52615 8.74169 9.2761 8.99174C9.02605 9.24179 8.68692 9.38226 8.33329 9.38226Z" fill="currentColor"/>
  </svg>
);

// Add this interface for the props
interface IconProps {
  fill?: string;
  className?: string;
}

// Update the FilterIcon to accept props
export const FilterIcon = ({ fill = "white", className }: IconProps) => (
  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <g clipPath="url(#clip0_5023_92)">
      <path fillRule="evenodd" clipRule="evenodd" d="M9.77098 3.12902C9.77098 2.71839 10.1287 2.66302 10.5824 2.5928C10.9967 2.52869 11.4909 2.4522 11.8658 2.0816C12.2449 1.70694 12.3191 1.14515 12.3826 0.664045C12.4508 0.148075 12.5067 -0.275089 12.9132 -0.275085C13.32 -0.275085 13.3757 0.146063 13.4439 0.661296C13.5075 1.14121 13.5818 1.70275 13.9607 2.0816C14.3372 2.45816 14.8341 2.53388 15.2494 2.59717C15.7006 2.66592 16.0555 2.72001 16.0555 3.12902C16.0555 3.53992 15.6762 3.59877 15.213 3.67063C14.7907 3.73616 14.2986 3.81251 13.9607 4.17644C13.6182 4.54528 13.5396 5.08731 13.4713 5.55858C13.3941 6.09101 13.33 6.53311 12.9132 6.53311C12.5073 6.53311 12.4522 6.1136 12.3848 5.59974C12.3217 5.11916 12.2477 4.55606 11.8658 4.17643C11.4871 3.80002 10.9904 3.72422 10.5756 3.66094C10.1249 3.59215 9.77098 3.53816 9.77098 3.12902ZM7.39286 6.98941L7.39284 6.98939C6.84145 6.43798 6.52567 5.76494 6.3344 5.12677C6.14271 5.76807 5.82511 6.44446 5.26828 6.99485C4.71274 7.54398 4.06687 7.8566 3.4709 8.0459C4.06738 8.23639 4.71352 8.55158 5.27095 9.10568C5.84815 9.67943 6.16852 10.3849 6.358 11.0461L6.36198 11.0316C6.5285 10.4272 6.81096 9.73387 7.35866 9.14399C7.8989 8.56215 8.56514 8.23938 9.17999 8.04818C8.58634 7.85697 7.94497 7.54151 7.39286 6.98941ZM6.33331 14.5489C5.55821 14.5489 5.45304 13.7479 5.32421 12.7667C5.20372 11.849 5.06255 10.7738 4.33331 10.0489C3.61025 9.33019 2.66169 9.18546 1.86977 9.06462C1.00902 8.93328 0.333313 8.83018 0.333313 8.04895C0.333313 7.26486 1.01641 7.15914 1.8827 7.02507C2.67368 6.90265 3.61739 6.7566 4.33331 6.04895C5.05708 5.33354 5.1988 4.26083 5.32017 3.34219C5.45033 2.35696 5.55708 1.54895 6.33331 1.54896C7.10993 1.54896 7.21639 2.35312 7.34665 3.33694C7.46797 4.25331 7.60993 5.32555 8.33331 6.04896C9.05233 6.76797 10.0011 6.91256 10.7942 7.03341C11.6556 7.16469 12.3333 7.26796 12.3333 8.04895C12.3333 8.83354 11.6091 8.94591 10.7246 9.08314C9.91817 9.20826 8.97853 9.35405 8.33331 10.049C7.67939 10.7532 7.52932 11.7882 7.39883 12.6881C7.25142 13.7047 7.12901 14.5489 6.33331 14.5489ZM11.2838 11.2622C11.3274 10.9322 11.3632 10.6615 11.6232 10.6615C11.8834 10.6615 11.9191 10.9309 11.9627 11.2605C11.975 11.3536 11.988 11.4516 12.0068 11.5496C12.0367 11.7047 12.0812 11.86 12.1613 11.9968C12.1974 12.0586 12.2407 12.1165 12.2932 12.169C12.3438 12.2196 12.3978 12.2617 12.454 12.297C12.5536 12.3596 12.6602 12.401 12.767 12.4305C12.8867 12.4636 13.0067 12.4819 13.1176 12.4988L13.1176 12.4988C13.4062 12.5427 13.6332 12.5773 13.6332 12.839C13.6332 13.1018 13.3906 13.1394 13.0943 13.1854L13.0943 13.1854C12.9897 13.2016 12.8785 13.2189 12.7689 13.2474C12.6578 13.2764 12.5483 13.317 12.4492 13.3798C12.3934 13.4152 12.3409 13.4576 12.2932 13.509C12.2418 13.5643 12.1997 13.6258 12.1648 13.6914C12.0918 13.8283 12.0503 13.9832 12.0211 14.1374C12.0047 14.2239 11.9922 14.3102 11.9802 14.393V14.393C11.9308 14.7336 11.8898 15.0164 11.6232 15.0164C11.3636 15.0164 11.3283 14.7481 11.2852 14.4194L11.2852 14.4193C11.2729 14.3257 11.2599 14.2271 11.241 14.1284C11.2124 13.98 11.1703 13.8313 11.0961 13.6988C11.0578 13.6305 11.0111 13.5664 10.9532 13.509C10.9017 13.4577 10.8468 13.4152 10.7897 13.3796C10.6901 13.3176 10.5838 13.2766 10.4775 13.2473C10.358 13.2143 10.2385 13.1961 10.128 13.1792C9.83963 13.1352 9.61327 13.1007 9.61327 12.839C9.61327 12.5763 9.8421 12.5409 10.1323 12.496L10.1323 12.496C10.2413 12.4791 10.3589 12.4609 10.4763 12.4288C10.5836 12.3995 10.6907 12.3586 10.7909 12.2966C10.8476 12.2614 10.9022 12.2195 10.9532 12.169C11.0061 12.1168 11.0497 12.0588 11.0859 11.997C11.1659 11.8606 11.2104 11.7052 11.2401 11.5497C11.2587 11.4523 11.2716 11.3549 11.2838 11.2622Z" fill={fill}/>
    </g>
    <defs>
      <clipPath id="clip0_5023_92">
        <rect width="16" height="16" fill={fill}/>
      </clipPath>
    </defs>
  </svg>
);

export const SignInIcon = () => (
  <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M10.4306 8.19261C11.0842 7.67839 11.5613 6.97323 11.7954 6.17524C12.0296 5.37726 12.0092 4.52612 11.7371 3.74026C11.465 2.95439 10.9548 2.27288 10.2773 1.79052C9.59986 1.30816 8.78891 1.04895 7.95727 1.04895C7.12564 1.04895 6.31468 1.30816 5.63723 1.79052C4.95977 2.27288 4.4495 2.95439 4.17741 3.74026C3.90533 4.52612 3.88495 5.37726 4.11911 6.17524C4.35328 6.97323 4.83035 7.67839 5.48394 8.19261C4.36399 8.64131 3.3868 9.38551 2.65653 10.3459C1.92627 11.3063 1.47032 12.4468 1.33727 13.6459C1.32764 13.7335 1.33535 13.8221 1.35996 13.9067C1.38456 13.9912 1.42558 14.0701 1.48068 14.1388C1.59195 14.2776 1.7538 14.3665 1.93061 14.3859C2.10742 14.4054 2.28471 14.3538 2.42349 14.2425C2.56227 14.1313 2.65116 13.9694 2.67061 13.7926C2.817 12.4894 3.4384 11.2858 4.41609 10.4118C5.39377 9.5378 6.65921 9.05463 7.97061 9.05463C9.28201 9.05463 10.5474 9.5378 11.5251 10.4118C12.5028 11.2858 13.1242 12.4894 13.2706 13.7926C13.2887 13.9564 13.3669 14.1077 13.49 14.2173C13.6131 14.3269 13.7725 14.3869 13.9373 14.3859H14.0106C14.1854 14.3658 14.3451 14.2775 14.455 14.1401C14.5649 14.0028 14.616 13.8275 14.5973 13.6526C14.4636 12.4501 14.0052 11.3066 13.2712 10.3448C12.5372 9.3829 11.5552 8.63893 10.4306 8.19261ZM7.95727 7.71928C7.42986 7.71928 6.91428 7.56288 6.47575 7.26987C6.03722 6.97685 5.69543 6.56037 5.49359 6.0731C5.29176 5.58583 5.23895 5.04966 5.34185 4.53237C5.44474 4.01509 5.69872 3.53994 6.07166 3.167C6.4446 2.79406 6.91975 2.54008 7.43703 2.43719C7.95432 2.33429 8.49049 2.3871 8.97776 2.58894C9.46503 2.79077 9.88151 3.13256 10.1745 3.57109C10.4675 4.00962 10.6239 4.5252 10.6239 5.05261C10.6239 5.75986 10.343 6.43814 9.84289 6.93823C9.3428 7.43833 8.66452 7.71928 7.95727 7.71928Z" fill="currentColor"/>
  </svg>
); 

export const TinybirdIcon = ({ className }: { className?: string }) => (
  <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path opacity="0.6" d="M7.05159 10.414L11.2756 11.9144L4.08252 17.0005L7.05159 10.414Z" fill="currentColor"/>
    <path d="M13.6022 3.45169L11.2812 11.9338L0.71582 8.11861L13.6022 3.45169Z" fill="currentColor"/>
    <path opacity="0.6" d="M11.217 0.965287L15.8661 2.63556L9.47225 4.94605L11.217 0.965287Z" fill="currentColor"/>
  </svg>
)